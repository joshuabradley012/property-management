{"version":3,"sources":["webpack:///./src/components/DashboardCharts.js"],"names":["COLORS","barAxisTick","x","y","payload","transform","dy","textAnchor","fill","value","pieLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","RADIAN","index","Math","PI","radius","cos","sin","dominantBaseline","toFixed","DashboardCharts","classes","date","barData","getHistory","rentData","pieData","getSource","p","px","container","spacing","item","xs","sm","lg","variant","style","height","mb","getRentCollected","entries","toLocaleString","getRentRoll","records","getLateFees","getReimbursements","data","margin","top","right","left","bottom","strokeDasharray","dataKey","tick","stackId","paddingAngle","labelLine","label","map","entry","key","name","length"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  BarChart,\n  Bar,\n  CartesianGrid,\n  Cell,\n  Legend,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Sector,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts'\nimport {\n  Box,\n  Grid,\n  Paper,\n  Typography,\n} from '@material-ui/core'\nimport { data as rentData } from '../../data'\nimport {\n  getHistory,\n  getLateFees,\n  getReimbursements,\n  getRentCollected,\n  getRentRoll,\n  getSource,\n} from '../utilities/getData'\n\nconst COLORS = ['#1976d2', '#388e3c', '#f57c00', '#7b1fa2', '#fbc02d' ];\n\nconst barAxisTick = ({ x, y, payload }) => {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text dy={16} textAnchor=\"middle\" fill=\"#666\">{payload.value}</text>\n    </g>\n  )\n}\n\nconst pieLabel = ({cx, cy, midAngle, innerRadius, outerRadius, percent, index}) => {\n  const RADIAN = Math.PI / 180;\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  )\n}\n\nconst DashboardCharts = ({ classes, date }) => {\n  const barData = getHistory(rentData, [date])\n  const pieData = getSource(rentData, date)\n\n  return (\n    <Box p={1.5} px={[0, 1.5]}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} lg={4}>\n          <Paper variant=\"outlined\" style={{ height: 320 }}>\n            <Box p={2}>\n              <Box mb={1}>\n                <Typography variant=\"subtitle2\">Total Collected</Typography>\n                <Typography variant=\"h2\">${getRentCollected(rentData.entries, date).toLocaleString()}</Typography>\n              </Box>\n              <Box mb={1}>\n                <Typography variant=\"caption\">Rent Roll</Typography>\n                <Typography variant=\"h5\">${getRentRoll(rentData.records, date).toLocaleString()}</Typography>\n              </Box>\n              <Box mb={1}>\n                <Typography variant=\"caption\">Fees</Typography>\n                <Typography variant=\"h5\">${getLateFees(rentData.entries, date).toLocaleString()}</Typography>\n              </Box>\n              <Box mb={1}>\n                <Typography variant=\"caption\">Reimbursements</Typography>\n                <Typography variant=\"h5\">${getReimbursements(rentData.entries, date).toLocaleString()}</Typography>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} lg={5}>\n          <Paper variant=\"outlined\">\n            {/*<Box pt={2} pl={2}><Typography variant=\"subtitle2\">Timeline</Typography></Box>*/}\n            <ResponsiveContainer height={320}>\n              <BarChart data={barData} margin={{ top: 40, right: 32, left: 16, bottom: 5 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" tick={barAxisTick} />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"Collected\" stackId=\"a\" fill=\"#1976d2\" />\n                <Bar dataKey=\"Due\" stackId=\"a\" fill=\"#d32f2f\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3}>\n          <Paper variant=\"outlined\">\n            {/*<Box pt={2} pl={2}><Typography variant=\"subtitle2\">Source</Typography></Box>*/}\n            <ResponsiveContainer height={320}>\n              <PieChart>\n                <Pie\n                  data={pieData}\n                  innerRadius=\"55%\"\n                  paddingAngle={5}\n                  labelLine={false}\n                  label={pieLabel}\n                  dataKey=\"value\"\n                >\n                  {\n                    pieData.map((entry, index) => <Cell key={entry.name} fill={COLORS[index % COLORS.length]}/>)\n                  }\n                </Pie>\n                <text x=\"50%\" y=\"46%\" dy={8} textAnchor=\"middle\" fill=\"#666\">Payment Source</text>\n                <Tooltip/>\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default DashboardCharts"],"sourceRoot":""}